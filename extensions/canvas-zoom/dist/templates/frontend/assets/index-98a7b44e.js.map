{"version":3,"file":"index-98a7b44e.js","sources":["../../../../js/form/src/CheckboxGroup.svelte","../../../../js/app/src/components/CheckboxGroup/CheckboxGroup.svelte","../../../../js/app/src/components/CheckboxGroup/index.ts"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { BlockTitle, Info } from \"@gradio/atoms\";\n\timport { get_styles } from \"@gradio/utils\";\n\timport type { Styles, SelectData } from \"@gradio/utils\";\n\n\texport let value: Array<string> = [];\n\texport let style: Styles = {};\n\texport let choices: Array<string>;\n\texport let disabled: boolean = false;\n\texport let label: string;\n\texport let info: string | undefined = undefined;\n\texport let show_label: boolean;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: Array<string>;\n\t\tselect: SelectData;\n\t}>();\n\n\tconst toggleChoice = (choice: string) => {\n\t\tif (value.includes(choice)) {\n\t\t\tvalue.splice(value.indexOf(choice), 1);\n\t\t} else {\n\t\t\tvalue.push(choice);\n\t\t}\n\t\tdispatch(\"change\", value);\n\t\tvalue = value;\n\t};\n\n\t$: ({ item_container } = get_styles(style, [\"item_container\"]));\n</script>\n\n<BlockTitle {show_label} {info}>{label}</BlockTitle>\n\n<div class=\"wrap\" data-testid=\"checkbox-group\">\n\t{#each choices as choice}\n\t\t<label\n\t\t\tclass:disabled\n\t\t\tclass:selected={value.includes(choice)}\n\t\t\tstyle={item_container}\n\t\t>\n\t\t\t<input\n\t\t\t\t{disabled}\n\t\t\t\ton:change={() => toggleChoice(choice)}\n\t\t\t\ton:input={(evt) =>\n\t\t\t\t\tdispatch(\"select\", {\n\t\t\t\t\t\tindex: choices.indexOf(choice),\n\t\t\t\t\t\tvalue: choice,\n\t\t\t\t\t\tselected: evt.currentTarget.checked\n\t\t\t\t\t})}\n\t\t\t\tchecked={value.includes(choice)}\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tname=\"test\"\n\t\t\t/>\n\t\t\t<span class=\"ml-2\">{choice}</span>\n\t\t</label>\n\t{/each}\n</div>\n\n<style>\n\t.wrap {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: var(--checkbox-label-gap);\n\t}\n\tlabel {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttransition: var(--button-transition);\n\t\tcursor: pointer;\n\t\tbox-shadow: var(--checkbox-label-shadow);\n\t\tborder: var(--checkbox-label-border-width) solid\n\t\t\tvar(--checkbox-label-border-color);\n\t\tborder-radius: var(--button-small-radius);\n\t\tbackground: var(--checkbox-label-background-fill);\n\t\tpadding: var(--checkbox-label-padding);\n\t\tcolor: var(--checkbox-label-text-color);\n\t\tfont-weight: var(--checkbox-label-text-weight);\n\t\tfont-size: var(--checkbox-label-text-size);\n\t\tline-height: var(--line-md);\n\t}\n\n\tlabel:hover {\n\t\tbackground: var(--checkbox-label-background-fill-hover);\n\t}\n\tlabel:focus {\n\t\tbackground: var(--checkbox-label-background-fill-focus);\n\t}\n\tlabel.selected {\n\t\tbackground: var(--checkbox-label-background-fill-selected);\n\t\tcolor: var(--checkbox-label-text-color-selected);\n\t}\n\n\tlabel > * + * {\n\t\tmargin-left: var(--size-2);\n\t}\n\n\tinput {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\tbox-shadow: var(--checkbox-shadow);\n\t\tborder: var(--checkbox-border-width) solid var(--checkbox-border-color);\n\t\tborder-radius: var(--checkbox-border-radius);\n\t\tbackground-color: var(--checkbox-background-color);\n\t\tline-height: var(--line-sm);\n\t}\n\n\tinput:checked,\n\tinput:checked:hover,\n\tinput:checked:focus {\n\t\tborder-color: var(--checkbox-border-color-selected);\n\t\tbackground-image: var(--checkbox-check);\n\t\tbackground-color: var(--checkbox-background-color-selected);\n\t}\n\n\tinput:hover {\n\t\tborder-color: var(--checkbox-border-color-hover);\n\t\tbackground-color: var(--checkbox-background-color-hover);\n\t}\n\n\tinput:focus {\n\t\tborder-color: var(--checkbox-border-color-focus);\n\t\tbackground-color: var(--checkbox-background-color-focus);\n\t}\n\n\tinput[disabled],\n\t.disabled {\n\t\tcursor: not-allowed;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { CheckboxGroup } from \"@gradio/form\";\n\timport { Block } from \"@gradio/atoms\";\n\timport StatusTracker from \"../StatusTracker/StatusTracker.svelte\";\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\n\timport type { Styles } from \"@gradio/utils\";\n\n\texport let elem_id: string = \"\";\n\texport let elem_classes: Array<string> = [];\n\texport let visible: boolean = true;\n\texport let value: Array<string> = [];\n\texport let choices: Array<string>;\n\texport let style: Styles = {};\n\texport let mode: \"static\" | \"dynamic\";\n\texport let label: string = \"Checkbox Group\";\n\texport let info: string | undefined = undefined;\n\texport let show_label: boolean;\n\n\texport let loading_status: LoadingStatus;\n</script>\n\n<Block\n\t{visible}\n\t{elem_id}\n\t{elem_classes}\n\ttype=\"fieldset\"\n\tdisable={typeof style.container === \"boolean\" && !style.container}\n>\n\t<StatusTracker {...loading_status} />\n\n\t<CheckboxGroup\n\t\tbind:value\n\t\t{choices}\n\t\t{label}\n\t\t{info}\n\t\t{style}\n\t\t{show_label}\n\t\ton:select\n\t\ton:change\n\t\tdisabled={mode === \"static\"}\n\t/>\n</Block>\n","export { default as Component } from \"./CheckboxGroup.svelte\";\nexport const modes = [\"static\", \"dynamic\"];\n\nexport const document = (config: Record<string, any>) => ({\n\ttype: {\n\t\tpayload: \"Array<string>\"\n\t},\n\tdescription: {\n\t\tpayload: \"list of selected choices\"\n\t},\n\texample_data: config.choices.length ? [config.choices[0]] : []\n});\n"],"names":["ctx","insert","target","label_1","anchor","append","input","span","set_data","t1","t1_value","i","div","value","$$props","style","choices","disabled","label","info","show_label","dispatch","createEventDispatcher","toggleChoice","choice","change_handler","evt","item_container","get_styles","dirty","checkboxgroup_changes","block_changes","elem_id","elem_classes","visible","mode","loading_status","modes","document","config"],"mappings":"kkBAgCiCA,EAAK,CAAA,CAAA,oCAALA,EAAK,CAAA,CAAA,gDAsBfA,EAAM,EAAA,EAAA,sLAJhBA,EAAK,CAAA,EAAC,SAASA,EAAM,EAAA,CAAA,yHAXxBA,EAAc,CAAA,CAAA,oEADLA,EAAK,CAAA,EAAC,SAASA,EAAM,EAAA,CAAA,CAAA,UAFtCC,EAmBOC,EAAAC,EAAAC,CAAA,EAdNC,EAYCF,EAAAG,CAAA,SACDD,EAAiCF,EAAAI,CAAA,4GAJvBP,EAAK,CAAA,EAAC,SAASA,EAAM,EAAA,CAAA,8BAIXA,EAAM,EAAA,EAAA,KAAAQ,EAAAC,EAAAC,CAAA,oBAfnBV,EAAc,CAAA,CAAA,gDADLA,EAAK,CAAA,EAAC,SAASA,EAAM,EAAA,CAAA,CAAA,+IAHhCA,EAAO,CAAA,uBAAZ,OAAIW,GAAA,sMADPV,EAuBKC,EAAAU,EAAAR,CAAA,sLAtBGJ,EAAO,CAAA,oBAAZ,OAAIW,GAAA,EAAA,iHAAJ,yIA7BS,MAAAE,EAAK,EAAA,EAAAC,GACL,MAAAC,EAAK,EAAA,EAAAD,GACL,QAAAE,CAAsB,EAAAF,EACtB,CAAA,SAAAG,EAAoB,EAAK,EAAAH,GACzB,MAAAI,CAAa,EAAAJ,EACb,CAAA,KAAAK,EAA2B,MAAS,EAAAL,GACpC,WAAAM,CAAmB,EAAAN,EAExB,MAAAO,EAAWC,IAKXC,EAAgBC,GAAc,CAC/BX,EAAM,SAASW,CAAM,EACxBX,EAAM,OAAOA,EAAM,QAAQW,CAAM,EAAG,CAAC,EAErCX,EAAM,KAAKW,CAAM,EAElBH,EAAS,SAAUR,CAAK,UAkBLY,EAAAD,GAAAD,EAAaC,CAAM,OACzBE,IACVL,EAAS,SAAQ,CAChB,MAAOL,EAAQ,QAAQQ,CAAM,EAC7B,MAAOA,EACP,SAAUE,EAAI,cAAc,0RAnB3B,eAAAC,GAAmBC,EAAWb,GAAQ,gBAAgB,CAAA,EAAAY,CAAA,kMCDzC3B,EAAc,EAAA,CAAA,iKAWtB,SAAAA,OAAS,6PAXDA,EAAc,EAAA,CAAA,CAAA,CAAA,4IAWtB6B,EAAA,KAAAC,EAAA,SAAA9B,OAAS,4SAbJ,QAAA,OAAAA,KAAM,WAAc,WAAc,CAAAA,KAAM,4LAAxC6B,EAAA,KAAAE,EAAA,QAAA,OAAA/B,KAAM,WAAc,WAAc,CAAAA,KAAM,6JAnB7C,GAAA,CAAA,QAAAgC,EAAkB,EAAE,EAAAlB,GACpB,aAAAmB,EAAY,EAAA,EAAAnB,EACZ,CAAA,QAAAoB,EAAmB,EAAI,EAAApB,GACvB,MAAAD,EAAK,EAAA,EAAAC,GACL,QAAAE,CAAsB,EAAAF,GACtB,MAAAC,EAAK,EAAA,EAAAD,GACL,KAAAqB,CAA0B,EAAArB,EAC1B,CAAA,MAAAI,EAAgB,gBAAgB,EAAAJ,EAChC,CAAA,KAAAK,EAA2B,MAAS,EAAAL,GACpC,WAAAM,CAAmB,EAAAN,GAEnB,eAAAsB,CAA6B,EAAAtB,+qBCjB5BuB,GAAQ,CAAC,SAAU,SAAS,EAE5BC,GAAYC,IAAiC,CACzD,KAAM,CACL,QAAS,eACV,EACA,YAAa,CACZ,QAAS,0BACV,EACA,aAAcA,EAAO,QAAQ,OAAS,CAACA,EAAO,QAAQ,CAAC,CAAC,EAAI,CAAC,CAC9D"}